version: "3.8"

services:
  db:
    image: postgres:13
    container_name: tech_note_db
    restart: unless-stopped
    networks:
      - tech_note-backend-tier
    volumes:
      - tech_note-db:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres

  redis:
    image: library/redis:5.0
    container_name: tech_note_redis
    restart: unless-stopped
    networks:
      - tech_note-backend-tier
    volumes:
      - tech_note-redis:/data

  api:
    build:
      context: ./server
      dockerfile: ./Dockerfile
      args:
        PACKAGE_TYPE: -dev
    container_name: tech_note_api
    image: nayan32biswas/technotesplus:latest
    restart: unless-stopped
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - 8000:8000
    networks:
      - tech_note-backend-tier
    volumes:
      - ./server/:/app/server/
    env_file: .env
    depends_on:
      - db
      - redis

  worker:
    image: nayan32biswas/technotesplus:latest
    container_name: tech_note_worker
    restart: unless-stopped
    command: celery -A tech_note --app=tech_note.celeryconf:app worker --beat --scheduler django --loglevel=info
    networks:
      - tech_note-backend-tier
    env_file: .env
    volumes:
      - ./server/:/app/server/
    depends_on:
      - db
      - redis

volumes:
  tech_note-db:
    driver: local
  tech_note-redis:
    driver: local

networks:
  tech_note-backend-tier:
    driver: bridge
